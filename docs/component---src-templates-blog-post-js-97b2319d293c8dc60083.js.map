{"version":3,"file":"component---src-templates-blog-post-js-97b2319d293c8dc60083.js","mappings":"2KAqDA,IA3CYA,KAAO,IAADC,EAChB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,gBAAe,aAc5BC,EAAYF,SAAc,QAARD,EAANC,EAAQG,cAAM,IAAAJ,OAAR,EAANA,EAAgBK,IAElC,OACEC,EAAAA,cAAA,OAAKC,UAAU,OACZJ,GACCG,EAAAA,cAAA,OACEE,KAAKP,aAAM,EAANA,EAAQQ,YAAc,GAC3BF,UAAU,aACVG,IAAKP,KAGRF,aAAM,EAANA,EAAQQ,YACPH,EAAAA,cAAA,SAAG,cACUA,EAAAA,cAAA,cAASL,EAAOQ,WACzB,KACDR,aAAM,EAANA,EAAQU,cAAe,KACtB,KACDV,aAAM,EAANA,EAAQW,UACPN,EAAAA,cAAA,KAAGO,KAAO,wBAAsBZ,aAAM,EAANA,EAAQW,UAAY,MAAK,sCAM3D,C,wGCwCV,UAxEyBE,IAAyC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAArCC,MAAM,SAAEC,EAAQ,KAAEC,EAAI,KAAEC,IAAQV,EAC1D,MAAMW,EAAgB,CACpBJ,KAAwB,QAApBN,EAAES,EAAKC,qBAAa,IAAAV,GAAM,QAANC,EAAlBD,EAAoBW,YAAI,IAAAV,GAAW,QAAXC,EAAxBD,EAA0BW,iBAAS,IAAAV,GAAiB,QAAjBC,EAAnCD,EAAqCW,uBAAe,IAAAV,OAAlC,EAAlBA,EAAsDW,gBAC5DrB,KAAuB,QAAlBW,EAAAK,EAAKC,qBAAa,IAAAN,GAAM,QAANC,EAAlBD,EAAoBO,YAAI,IAAAN,OAAN,EAAlBA,EAA0BZ,MAAQ,IAGzC,OACEF,EAAAA,cAACwB,EAAAA,EAAM,KACLxB,EAAAA,cAACyB,EAAAA,EAAG,CAACC,MAAOR,EAAKQ,MAAOrB,YAAaa,EAAKS,UAE1C3B,EAAAA,cAAA,WACEC,UAAU,YACV2B,WAAS,EACTC,SAAS,6BAET7B,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI8B,SAAS,aAAYC,EAAAA,EAAAA,IAAMb,EAAKQ,QAEpC1B,EAAAA,cAAA,SAAIkB,EAAKc,OAGRb,aAAa,EAAbA,EAAeJ,OACdf,EAAAA,cAACiC,EAAAA,EAAW,CACVC,MAAOf,EAAcJ,KACrBb,IAAKiB,EAAcjB,IACnBiC,MAAO,CAAEC,aAAc,SAK1BlB,EAAKmB,SACNrC,EAAAA,cAAA,WAAS8B,SAAS,gBAAeC,EAAAA,EAAAA,IAAMb,EAAKmB,UAG9CrC,EAAAA,cAAA,WAEAA,EAAAA,cAAA,cACEA,EAAAA,cAACP,EAAAA,EAAG,QAIRO,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEmC,MAAO,CACLG,QAAU,OACVC,SAAW,OACXC,eAAiB,gBACjBC,UAAY,OACZC,QAAS,IAGX1C,EAAAA,cAAA,UACGgB,GACChB,EAAAA,cAAC2C,EAAAA,KAAI,CAACC,GAAI5B,EAAS6B,IAAKC,IAAI,QAAO,MAC9Bf,EAAAA,EAAAA,IAAMf,EAASU,SAKxB1B,EAAAA,cAAA,UACGiB,GACCjB,EAAAA,cAAC2C,EAAAA,KAAI,CAACC,GAAI3B,EAAK4B,IAAKC,IAAI,SACrBf,EAAAA,EAAAA,IAAMd,EAAKS,OAAO,SAMtB,C","sources":["webpack://gatsby-starter-wordpress-blog/./src/components/bio.js","webpack://gatsby-starter-wordpress-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = () => {\n  const { author } = useStaticQuery(graphql`\n    query BioQuery {\n      # if there was more than one user, this would need to be filtered\n      author: wpUser {\n        firstName\n        twitter: name\n        description\n        avatar {\n          url\n        }\n      }\n    }\n  `)\n\n  const avatarUrl = author?.avatar?.url\n\n  return (\n    <div className=\"bio\">\n      {avatarUrl && (\n        <img\n          alt={author?.firstName || ``}\n          className=\"bio-avatar\"\n          src={avatarUrl}\n        />\n      )}\n      {author?.firstName && (\n        <p>\n          Written by <strong>{author.firstName}</strong>\n          {` `}\n          {author?.description || null}\n          {` `}\n          {author?.twitter && (\n            <a href={`https://twitter.com/${author?.twitter || ``}`}>\n              You should follow them on Twitter\n            </a>\n          )}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport parse from \"html-react-parser\"\n\n// We're using Gutenberg so we need the block styles\n// these are copied into this project due to a conflict in the postCSS\n// version used by the Gatsby and @wordpress packages that causes build\n// failures.\n// @todo update this once @wordpress upgrades their postcss version\nimport \"../css/@wordpress/block-library/build-style/style.css\"\nimport \"../css/@wordpress/block-library/build-style/theme.css\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data: { previous, next, post } }) => {\n  const featuredImage = {\n    data: post.featuredImage?.node?.localFile?.childImageSharp?.gatsbyImageData,\n    alt: post.featuredImage?.node?.alt || ``,\n  }\n\n  return (\n    <Layout>\n      <Seo title={post.title} description={post.excerpt} />\n\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{parse(post.title)}</h1>\n\n          <p>{post.date}</p>\n\n          {/* if we have a featured image for this post let's display it */}\n          {featuredImage?.data && (\n            <GatsbyImage\n              image={featuredImage.data}\n              alt={featuredImage.alt}\n              style={{ marginBottom: 50 }}\n            />\n          )}\n        </header>\n\n        {!!post.content && (\n          <section itemProp=\"articleBody\">{parse(post.content)}</section>\n        )}\n\n        <hr />\n\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.uri} rel=\"prev\">\n                ← {parse(previous.title)}\n              </Link>\n            )}\n          </li>\n\n          <li>\n            {next && (\n              <Link to={next.uri} rel=\"next\">\n                {parse(next.title)} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostById(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    post: wpPost(id: { eq: $id }) {\n      id\n      excerpt\n      content\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n      featuredImage {\n        node {\n          altText\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                quality: 100\n                placeholder: TRACED_SVG\n                layout: FULL_WIDTH\n              )\n            }\n          }\n        }\n      }\n    }\n    previous: wpPost(id: { eq: $previousPostId }) {\n      uri\n      title\n    }\n    next: wpPost(id: { eq: $nextPostId }) {\n      uri\n      title\n    }\n  }\n`\n"],"names":["Bio","_author$avatar","author","useStaticQuery","avatarUrl","avatar","url","React","className","alt","firstName","src","description","twitter","href","_ref","_post$featuredImage","_post$featuredImage$n","_post$featuredImage$n2","_post$featuredImage$n3","_post$featuredImage2","_post$featuredImage2$","data","previous","next","post","featuredImage","node","localFile","childImageSharp","gatsbyImageData","Layout","Seo","title","excerpt","itemScope","itemType","itemProp","parse","date","GatsbyImage","image","style","marginBottom","content","display","flexWrap","justifyContent","listStyle","padding","Link","to","uri","rel"],"sourceRoot":""}